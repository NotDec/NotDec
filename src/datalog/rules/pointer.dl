// alphabetic order, TODO currently must in a line for gen_header.py
.type highTypeDomain = Number {} | Pointer {} | Top {} 
//    /* | Unknown{} */ // unknown (bottom) not analyzed

// 指针的指针，如：作为全局变量地址的sp。
.decl point2Pointer(val: vid)
// specify memory value
.decl isMemory(val: vid)
.input point2Pointer, isMemory

.decl highType(val: vid, status: highTypeDomain)

// Top always wins
highType(val, _) <= highType(val, $Top()) :- true.

// Multiple values implies Top
highType(val, $Top()) :- highType(val, $Pointer()), highType(val, $Number()).
.output highType

// getelemptr mem, 0, X
highType(X, $Pointer()) :- 
    Instruction(id, "getelementptr", _, _),
    Operand(id, 0, memId),
    isMemory(memId),
    Operand(id, 1, zeroid),
    IntConstant(zeroid, 0),
    Operand(id, 2, X).

// load from point2Pointer
highType(load_inst, $Pointer()) :- 
    Instruction(load_inst, "load", _, _),
    Operand(load_inst, 0, sp),
    point2Pointer(sp).
    // and i32 type?

// store to point2Pointer
highType(store_val, $Pointer()) :- 
    Instruction(store_inst, "store", _, _),
    Operand(store_inst, 0, store_val),
    Operand(store_inst, 1, sp),
    point2Pointer(sp).


// int + ptr = ptr
highType(ptr_add, $Pointer()) :-
    Instruction(ptr_add, "add", _, _),
    Operand(ptr_add, _, ptr),
    highType(ptr, $Pointer()),
    Operand(ptr_add, _, offset),
    ValueType(offset, ty),
    SizeType(ty).

// ptr = int + ptr
highType(ptr_add_op, $Pointer()) :-
    Instruction(ptr_add, "add", _, _),
    highType(ptr_add, $Pointer()),
    Operand(ptr_add, _, ptr_add_op),
    Operand(ptr_add, _, offset),
    ValueType(offset, ty),
    SizeType(ty).


// ptr = ptr - int
highType(ptr_sub, $Pointer()) :-
    Instruction(ptr_sub, "sub", _, _),
    Operand(ptr_add, 0, ptr),
    highType(ptr, $Pointer()),
    Operand(ptr_add, 1, offset),
    ValueType(offset, ty),
    SizeType(ty).

// ptr - int = ptr
highType(ptr_sub_op, $Pointer()) :-
    Instruction(ptr_sub, "sub", _, _),
    highType(ptr_sub, $Pointer()),
    Operand(ptr_sub, 0, ptr_sub_op),
    Operand(ptr_sub, 1, offset),
    ValueType(offset, ty),
    SizeType(ty).

// ptr - ptr = int
// TODO

// TODO Phi Inst propergate

// // Function formal arg to actual arg
// highType(arg, $Pointer()) :-
//     Instruction(arg, "call", _, _),
//     Operand(arg, 0, func),
//     Function(func),
//     Operand(arg, _, arg),
//     FunctionArgument(func, arg).

// // Function return value
// highType(func, $Pointer()) :-
//     Instruction(ret, "ret", _, _),
//     Operand(ret, 0, func),
//     Function(func, _),
