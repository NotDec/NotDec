{
  "printLine": {
    "constraints": [
      "printLine.in_0 <= cstr",
      "cstr.@0+1.load8 <= #char"
    ],
    "pni_map": {
      "printLine": "func p #1",
      "printLine.in_0": "ptr p #2",
      "cstr": "ptr p #2",
      "cstr.@0+1": "ptr p #2",
      "cstr.@0+1.load8": "int 8 #3",
      "#char": "int 8 #3"
    }
  },
  "printWLine": {
    "constraints": [
      "printWLine.in_0 <= wcstr",
      "wcstr.@0+4.load32 <= #int"
    ],
    "pni_map": {
      "printWLine": "func p #1",
      "printWLine.in_0": "ptr p #2",
      "wcstr": "ptr p #2",
      "wcstr.@0+4": "ptr p #2",
      "wcstr.@0+4.load32": "int 32 #3",
      "#int": "int 32 #3"
    }
  },
  "printIntLine": {
    "constraints": [
      "printIntLine.in_0 <= #sint"
    ],
    "pni_map": {
      "printIntLine": "func p #1",
      "printIntLine.in_0": "int 32 #2",
      "#sint": "int 32 #2"
    }
  },
  "printShortLine": {
    "constraints": [
      "printShortLine.in_0 <= #int"
    ],
    "pni_map": {
      "printShortLine": "func p #1",
      "printShortLine.in_0": "int 32 #2",
      "#int": "int 32 #2"
    }
  },
  "printFloatLine": {
    "constraints": [
      "printFloatLine.in_0 <= #float"
    ],
    "pni_map": {
      "printFloatLine": "func p #1",
      "printFloatLine.in_0": "float 32 #2",
      "#float": "float 32 #2"
    }
  },
  "printDoubleLine": {
    "constraints": [
      "printDoubleLine.in_0 <= #double"
    ],
    "pni_map": {
      "printDoubleLine": "func p #1",
      "printDoubleLine.in_0": "double 64 #2",
      "#double": "double 64 #2"
    }
  },
  "printLongLine": {
    "constraints": [
      "printLongLine.in_0 <= #long"
    ],
    "pni_map": {
      "printLongLine": "func p #1",
      "printLongLine.in_0": "int p #2",
      "#long": "int p #2"
    }
  },
  "printLongLongLine": {
    "constraints": [
      "printLongLongLine.in_0 <= #longlong"
    ],
    "pni_map": {
      "printLongLongLine": "func p #1",
      "printLongLongLine.in_0": "longlong 64 #2",
      "#longlong": "longlong 64 #2"
    }
  },
  "printSizeTLine": {
    "constraints": [
      "printSizeTLine.in_0 <= #size_t"
    ],
    "pni_map": {
      "printSizeTLine": "func p #1",
      "printSizeTLine.in_0": "int p #2",
      "#size_t": "int p #2"
    }
  },
  "printHexCharLine": {
    "constraints": [
      "printHexCharLine.in_0 <= #int"
    ],
    "pni_map": {
      "printHexCharLine": "func p #1",
      "printHexCharLine.in_0": "int 32 #2",
      "#int": "int 32 #2"
    }
  },
  "printWcharLine": {
    "constraints": [
      "printWcharLine.in_0 <= #int"
    ],
    "pni_map": {
      "printWcharLine": "func p #1",
      "printWcharLine.in_0": "int 32 #2",
      "#int": "int 32 #2"
    }
  },
  "printUnsignedLine": {
    "constraints": [
      "printUnsignedLine.in_0 <= #uint"
    ],
    "pni_map": {
      "printUnsignedLine": "func p #1",
      "printUnsignedLine.in_0": "int 32 #2",
      "#uint": "int 32 #2"
    }
  },
  "printHexUnsignedCharLine": {
    "constraints": [
      "printHexUnsignedCharLine.in_0 <= #char"
    ],
    "pni_map": {
      "printHexUnsignedCharLine": "func p #1",
      "printHexUnsignedCharLine.in_0": "int 8 #2",
      "#char": "int 8 #2"
    }
  },
  "printBytesLine": {
    "constraints": [
      "printBytesLine.in_0 <= bytes",
      "bytes.@0+1.load8 <= #char",
      "printBytesLine.in_1 <= #uint"
    ],
    "pni_map": {
      "printBytesLine": "func p #1",
      "printBytesLine.in_0": "ptr p #2",
      "cstr": "ptr p #2",
      "cstr.@0+1": "ptr p #2",
      "cstr.@0+1.load8": "int 8 #3",
      "#char": "int 8 #3",
      "printBytesLine.in_1": "int p #3",
      "#uint": "int p #3"
    }
  },
  "memset": {
    "constraints": [
      "memset.in_0 <= memset.out",
      "memset.in_1 <= #uint",
      "memset.in_2 <= #uint"
    ],
    "pni_map": {
      "memset": "func p #1",
      "memset.out": "ptr p #2",
      "memset.in_0": "ptr p #2",
      "memset.in_1": "int 32 #4",
      "memset.in_2": "int p #5",
      "#uint": "int p #5"
    }
  },
  "memcpy": {
    "constraints": [
      "memcpy.in_1 <= memcpy.in_0",
      "memcpy.in_0 <= memcpy.out",
      "memcpy.in_2 <= #uint"
    ],
    "pni_map": {
      "memcpy": "func p #1",
      "memcpy.in_0": "ptr p #2",
      "memcpy.in_1": "ptr p #2",
      "memcpy.out": "ptr p #2",
      "memcpy.in_2": "int p #6",
      "#uint": "int p #6"
    }
  },
  "__memcpy": {
    "constraints": [
      "__memcpy.in_1 <= __memcpy.in_0",
      "__memcpy.in_0 <= __memcpy.out",
      "__memcpy.in_2 <= #uint"
    ],
    "pni_map": {
      "__memcpy": "func p #1",
      "__memcpy.in_0": "ptr p #2",
      "__memcpy.in_1": "ptr p #2",
      "__memcpy.out": "ptr p #2",
      "__memcpy.in_2": "int p #6",
      "#uint": "int p #6"
    }
  },
  "memmove": {
    "constraints": [
      "memmove.in_1 <= memmove.in_0",
      "memmove.in_0 <= memmove.out",
      "memmove.in_2 <= #uint"
    ],
    "pni_map": {
      "memmove": "func p #1",
      "memmove.in_0": "ptr p #2",
      "memmove.in_1": "ptr p #2",
      "memmove.out": "ptr p #2",
      "memmove.in_2": "int p #6",
      "#uint": "int p #6"
    }
  },
  "srand": {
    "constraints": [
      "srand.in_0 <= #uint"
    ],
    "pni_map": {
      "srand": "func p #1",
      "srand.in_0": "int 32 #2",
      "#uint": "int 32 #2"
    }
  },
  "atoi": {
    "constraints": [
      "atoi.in_0 <= cstr",
      "cstr.@0+1.load8 <= #char",
      "atoi.out <= #int"
    ],
    "pni_map": {
      "atoi": "func p #1",
      "atoi.in_0": "ptr p #2",
      "cstr": "ptr p #2",
      "cstr.@0+1": "ptr p #2",
      "cstr.@0+1.load8": "int 8 #3",
      "#char": "int 8 #3",
      "atoi.out": "int 32 #4",
      "#int": "int 32 #4"
    }
  },
  "fgets": {
    "constraints": [
      "fgets.in_0 <= cstr",
      "cstr.@0+1.load8 <= #char",
      "fgets.in_1 <= #int",
      "fgets.out <= cstr"
    ],
    "pni_map": {
      "fgets": "func p #1",
      "fgets.in_0": "ptr p #2",
      "cstr": "ptr p #2",
      "cstr.@0+1": "ptr p #2",
      "cstr.@0+1.load8": "int 8 #3",
      "#char": "int 8 #3",
      "fgets.in_1": "int 32 #4",
      "#int": "int 32 #4",
      "fgets.out": "ptr p #2"
    }
  }
}
 